'''
Author: error: git config user.name && git config user.email & please set dead value or install git
Date: 2022-06-08 09:42:15
LastEditors: error: git config user.name && git config user.email & please set dead value or install git
LastEditTime: 2022-06-09 06:27:01
FilePath: /ReDet/DOTA_devkit/draw.py
Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE
'''
#一张图片 标签文件
#画kuang图
import os
import cv2
import random
import dota_utils as util
import pdb
import dota_utils as util
import os
import cv2
import json
from PIL import Image
import pdb

wordname_15 = ['plane', 'baseball-diamond', 'bridge', 'ground-track-field', 'small-vehicle', 'large-vehicle', 'ship',
               'tennis-court',
               'basketball-court', 'storage-tank', 'soccer-ball-field', 'roundabout', 'harbor', 'swimming-pool',
               'helicopter']
color_white = (255, 255, 255)
colormap = [(random.randint(0, 256), random.randint(0, 256), random.randint(0, 256)),(random.randint(0, 256), random.randint(0, 256), random.randint(0, 256)),(random.randint(0, 256), random.randint(0, 256), random.randint(0, 256)),(random.randint(0, 256), random.randint(0, 256), random.randint(0, 256)),(random.randint(0, 256), random.randint(0, 256), random.randint(0, 256)),(random.randint(0, 256), random.randint(0, 256), random.randint(0, 256)),(random.randint(0, 256), random.randint(0, 256), random.randint(0, 256)),(random.randint(0, 256), random.randint(0, 256), random.randint(0, 256)),(random.randint(0, 256), random.randint(0, 256), random.randint(0, 256)),(random.randint(0, 256), random.randint(0, 256), random.randint(0, 256)),(random.randint(0, 256), random.randint(0, 256), random.randint(0, 256)),(random.randint(0, 256), random.randint(0, 256), random.randint(0, 256)),(random.randint(0, 256), random.randint(0, 256), random.randint(0, 256)),(random.randint(0, 256), random.randint(0, 256), random.randint(0, 256)),(random.randint(0, 256), random.randint(0, 256), random.randint(0, 256))]
# name='P0002__1__824___0'
# imgpath = os.path.join('/workspace/ReDet/datasets/DOTA_1024/trainval1024/test600', name + '.png')
# labelpath=os.path.join('/workspace/ReDet/datasets/DOTA_1024/trainval1024/labelTxt_0.05', name + '.txt')
# objects = util.parse_dota_poly2(labelpath)
# img = cv2.imread(imgpath,cv2.IMREAD_COLOR)
# print(objects)
# for obj in objects:
#     bbox=obj['poly']
#     j = wordname_15.index(obj['name'])
#     color = colormap[j]
#     for i in range(3):
#         cv2.line(img, (bbox[i * 2], bbox[i * 2 + 1]), (bbox[(i + 1) * 2], bbox[(i + 1) * 2 + 1]), color=color,
#                  thickness=2, lineType=cv2.LINE_AA)
#     cv2.line(img, (bbox[6], bbox[7]), (bbox[0], bbox[1]), color=color, thickness=2, lineType=cv2.LINE_AA)
#     cv2.putText(img, '%s' % (obj['name']), (bbox[0], bbox[1] + 10),color=color_white, fontFace=cv2.FONT_HERSHEY_COMPLEX, fontScale=0.5)
# dstpath1 = os.path.join('/workspace/ReDet/datasets/DOTA_1024/trainval1024/test600gt', name + ".png")
# cv2.imwrite(dstpath1, img)


# imgs='/workspace/ReDet/datasets/DOTA_1024/trainval1024/test600'
# filenames = util.GetFileFromThisRootDir(imgs)
# for file in filenames:
#     name = util.custombasename(file)
#     print(name)
#     imgpath = os.path.join('/workspace/ReDet/datasets/DOTA_1024/trainval1024/test600', name + '.png')
#     labelpath=os.path.join('/workspace/ReDet/datasets/DOTA_1024/trainval1024/labelTxt_0.05', name + '.txt')
#     objects = util.parse_dota_poly2(labelpath)
#     if len(objects)==0:
#         os.remove('/workspace/ReDet/datasets/DOTA_1024/trainval1024/test600/'+name + '.png')
#         continue
#     img = cv2.imread(imgpath,cv2.IMREAD_COLOR)
#     # print(objects)
#     for obj in objects:
#         bbox=obj['poly']
#         j = wordname_15.index(obj['name'])
#         color = colormap[j]
#         for i in range(3):
#             cv2.line(img, (bbox[i * 2], bbox[i * 2 + 1]), (bbox[(i + 1) * 2], bbox[(i + 1) * 2 + 1]), color=color,
#                     thickness=2, lineType=cv2.LINE_AA)
#         cv2.line(img, (bbox[6], bbox[7]), (bbox[0], bbox[1]), color=color, thickness=2, lineType=cv2.LINE_AA)
#         cv2.putText(img, '%s' % (obj['name']), (bbox[0], bbox[1] + 10),color=color_white, fontFace=cv2.FONT_HERSHEY_COMPLEX, fontScale=0.5)
#     dstpath1 = os.path.join('/workspace/ReDet/datasets/DOTA_1024/trainval1024/test600gt', name + ".png")
#     cv2.imwrite(dstpath1, img)


# def DOTA2COCOTest(srcpath, destfile, cls_names, ext='.png'):
#     imageparent = srcpath
#     data_dict = {}

#     data_dict['images'] = []
#     data_dict['categories'] = []
#     for idex, name in enumerate(cls_names):
#         single_cat = {'id': idex + 1, 'name': name, 'supercategory': name}
#         data_dict['categories'].append(single_cat)

#     image_id = 1
#     with open(destfile, 'w') as f_out:
#         filenames = util.GetFileFromThisRootDir(imageparent)
#         for file in filenames:
#             basename = util.custombasename(file)
#             imagepath = os.path.join(imageparent, basename + ext)
#             img = Image.open(imagepath)
#             height = img.height
#             width = img.width

#             single_image = {}
#             single_image['file_name'] = basename + ext
#             single_image['id'] = image_id
#             single_image['width'] = width
#             single_image['height'] = height
#             data_dict['images'].append(single_image)

#             image_id = image_id + 1
#         json.dump(data_dict, f_out)
    
# DOTA2COCOTest('/workspace/ReDet/datasets/DOTA_1024/trainval1024/test600','/workspace/ReDet/datasets/DOTA_1024/trainval1024/test600.json',wordname_15)

bbb=['P1632__1__1648___2472', 'P1927__1__0___1663', 'P1791__1__3296___0', 'P2203__1__446___0', 'P2281__1__1648___1648', 'P0835__1__824___444', 'P0257__1__0___0', 'P2018__1__0___293', 'P0343__1__824___0', 'P2251__1__247___56', 'P1788__1__0___0', 'P2095__1__379___454', 'P0310__1__1648___824', 'P2004__1__0___0', 'P1084__1__0___0', 'P1140__1__3296___1648', 'P0526__1__0___0', 'P2213__1__756___0', 'P1938__1__0___468', 'P1908__1__0___53', 'P1242__1__2976___2976', 'P2005__1__824___1648', 'P2646__1__263___1648', 'P1241__1__2976___0', 'P0920__1__295___0', 'P2076__1__824___0', 'P1084__1__115___0', 'P2097__1__76___0', 'P0202__1__0___174', 'P2034__1__453___267', 'P1775__1__115___811', 'P1241__1__1648___824', 'P1780__1__2562___2472', 'P1049__1__0___1648', 'P0087__1__3415___2472', 'P1174__1__4120___4120', 'P0093__1__0___115', 'P0821__1__0___0', 'P0850__1__0___0', 'P2262__1__824___0', 'P2228__1__959___824', 'P0911__1__11___0', 'P1838__1__0___0', 'P1996__1__0___0', 'P0257__1__56___0', 'P0769__1__48___0', 'P0975__1__824___684', 'P1804__1__230___316', 'P2017__1__75___0', 'P0236__1__289___426', 'P0525__1__0___290', 'P1960__1__0___0', 'P0133__1__190___410', 'P0060__1__2472___824', 'P0087__1__3296___824', 'P1869__1__0___2472', 'P0856__1__0___0', 'P2005__1__1648___2472', 'P0577__1__0___343', 'P0343__1__0___0', 'P1891__1__808___337', 'P0896__1__0___1414', 'P1780__1__0___3296', 'P0806__1__383___0', 'P0047__1__0___824', 'P0668__1__0___0', 'P0066__1__824___0', 'P2018__1__248___0', 'P0378__1__146___173', 'P2283__1__824___1040', 'P0168__1__1280___768', 'P0817__1__0___106', 'P0861__1__1154___1755', 'P2056__1__0___0', 'P2436__1__400___824', 'P0310__1__2012___930', 'P2095__1__0___0', 'P1179__1__4944___2472', 'P2517__1__0___0', 'P0867__1__0___824', 'P1788__1__761___401', 'P0000__1__1648___824', 'P2095__1__0___454', 'P0382__1__59___0', 'P0940__1__0___370', 'P0932__1__0___95', 'P1892__1__0___0', 'P0421__1__0___0', 'P1140__1__1648___1648', 'P1059__1__2496___824', 'P2523__1__767___0', 'P2028__1__0___0', 'P0422__1__0___0', 'P1793__1__2466___1648', 'P0898__1__1648___0', 'P0685__1__807___0', 'P0133__1__190___0', 'P0898__1__0___2855', 'P2014__1__1966___1648', 'P0764__1__0___74', 'P2612__1__824___0', 'P0424__1__80___0', 'P1907__1__0___0', 'P1839__1__0___0', 'P0160__1__0___1791', 'P2067__1__824___151', 'P0458__1__324___131', 'P1969__1__205___534', 'P2686__1__3296___2472', 'P0870__1__0___89', 'P0355__1__0___0', 'P2006__1__968___0', 'P2210__1__2472___453', 'P0000__1__2472___824', 'P1791__1__824___824', 'P1960__1__460___578', 'P1809__1__3296___3296', 'P2006__1__824___0', 'P0203__1__741___0', 'P0378__1__0___0', 'P1869__1__824___2472', 'P2266__1__0___58', 'P0206__1__0___0', 'P0164__1__0___0', 'P0849__1__627___0', 'P0559__1__0___0', 'P0342__1__0___0', 'P2005__1__824___2472', 'P1639__1__0___2472', 'P1641__1__1648___2472', 'P0822__1__0___0', 'P0478__1__0___0', 'P2076__1__824___184', 'P0421__1__0___89', 'P1960__1__0___578', 'P1773__1__0___132', 'P0425__1__0___0', 'P2495__1__0___1661', 'P0424__1__0___0', 'P0896__1__1012___824', 'P2060__1__0___0', 'P0769__1__0___567', 'P2076__1__0___184', 'P0768__1__1194___0', 'P0977__1__824___1193', 'P2099__1__0___0', 'P0526__1__0___658', 'P2099__1__0___116', 'P0579__1__0___0', 'P1839__1__358___0', 'P2262__1__0___0', 'P0864__1__2047___824', 'P0522__1__0___837', 'P0795__1__752___0', 'P1209__1__2472___824', 'P1075__1__1139___824', 'P1818__1__1379___123', 'P1794__1__0___3296', 'P1973__1__0___0', 'P2541__1__1590___824', 'P1801__1__824___824', 'P2065__1__0___106', 'P1079__1__0___0', 'P0258__1__0___0', 'P0219__1__1633___0', 'P0835__1__0___444', 'P1241__1__2472___1648', 'P1784__1__0___568', 'P0022__1__824___4120', 'P0905__1__0___0', 'P0632__1__1648___80', 'P0202__1__145___174', 'P1935__1__0___0', 'P2055__1__130___418', 'P1891__1__0___0', 'P0029__1__1735___0', 'P1995__1__0___0', 'P1871__1__7416___824', 'P0175__1__0___38', 'P0835__1__824___0', 'P0258__1__0___51', 'P1924__1__0___0', 'P0794__1__623___0', 'P1983__1__0___238', 'P0898__1__0___1648', 'P2014__1__1648___824', 'P0975__1__0___0', 'P2027__1__0___824', 'P2228__1__0___0', 'P2245__1__0___56', 'P0872__1__1402___0', 'P2033__1__570___595', 'P2005__1__824___0', 'P1994__1__0___0', 'P0052__1__0___824', 'P0421__1__336___89', 'P0083__1__0___3462', 'P1816__1__365___0', 'P0160__1__0___1648', 'P0703__1__0___880', 'P0727__1__634___74', 'P0083__1__0___3296', 'P1992__1__138___794', 'P0734__1__824___618', 'P1182__1__1648___0', 'P0920__1__295___877', 'P2247__1__1774___0', 'P1173__1__1648___1648', 'P1818__1__824___123', 'P1972__1__4944___824', 'P0892__1__824___1185', 'P2210__1__2472___0', 'P0454__1__442___0', 'P1650__1__824___1648', 'P0002__1__824___0', 'P0910__1__824___824', 'P0578__1__1116___98', 'P0343__1__0___92', 'P0310__1__824___930', 'P2059__1__0___0', 'P1939__1__0___152', 'P0977__1__0___1193', 'P2093__1__273___0', 'P0879__1__0___0', 'P1976__1__0___0', 'P2249__1__824___4120', 'P1071__1__1384___0', 'P0673__1__91___123', 'P1959__1__0___0', 'P1997__1__0___0', 'P0087__1__3296___1648', 'P0044__1__624___708', 'P0047__1__0___0', 'P1935__1__450___0', 'P0761__1__594___340', 'P0833__1__0___0', 'P1071__1__1384___2472', 'P0159__1__0___0', 'P2282__1__0___1648', 'P1075__1__824___824', 'P0087__1__3415___824', 'P2670__1__0___0', 'P2244__1__241___0', 'P0823__1__721___0', 'P1958__1__0___176', 'P0424__1__0___79', 'P2030__1__3296___3296', 'P2160__1__489___571', 'P0012__1__1872___0', 'P0766__1__0___0', 'P0936__1__824___134', 'P1989__1__0___122', 'P2098__1__0___0', 'P2006__1__968___1587', 'P0819__1__0___84', 'P2210__1__0___453', 'P0133__1__0___410', 'P0029__1__1648___1383', 'P2203__1__0___0', 'P2230__1__824___134', 'P2251__1__0___56', 'P0632__1__1902___80', 'P0381__1__111___0', 'P0706__1__0___158', 'P0727__1__634___0', 'P1168__1__824___4120', 'P1992__1__0___0', 'P0864__1__2047___1020', 'P2032__1__0___0', 'P0941__1__1648___0', 'P2005__1__1648___1648', 'P0578__1__1116___0', 'P1874__1__2522___1648', 'P0160__1__0___824', 'P0382__1__0___0', 'P2281__1__1648___824', 'P0044__1__624___0', 'P1960__1__460___0', 'P2692__1__1648___0', 'P2019__1__415___138', 'P0392__1__170___0', 'P1786__1__824___824', 'P1986__1__0___0', 'P0911__1__11___824', 'P2173__1__824___824', 'P1930__1__0___824', 'P2645__1__3581___1648', 'P2006__1__968___824', 'P1927__1__124___824', 'P0920__1__295___824', 'P2207__1__2183___0', 'P2100__1__0___422', 'P0578__1__824___98', 'P1793__1__2466___2109', 'P1179__1__3296___1648', 'P1926__1__0___0', 'P1938__1__982___0', 'P2419__1__566___824', 'P0186__1__0___0', 'P0475__1__0___0', 'P0941__1__1990___0', 'P2048__1__0___637', 'P2282__1__824___1648', 'P2006__1__0___824', 'P0791__1__107___58', 'P2659__1__824___824', 'P1632__1__1648___1648', 'P1281__1__2472___1648', 'P0810__1__0___0', 'P0310__1__2012___824', 'P0728__1__824___0', 'P1805__1__0___632', 'P2093__1__273___650', 'P2018__1__248___293', 'P0856__1__824___0', 'P0764__1__634___0', 'P1983__1__0___0', 'P0993__1__1432___124', 'P1159__1__2384___3191', 'P0381__1__0___0', 'P0111__1__938___720', 'P0044__1__0___0', 'P0632__1__1902___0', 'P2676__1__1442___1648', 'P0896__1__824___824', 'P2033__1__0___595', 'P2395__1__1648___1439', 'P0683__1__1005___824', 'P2007__1__824___824', 'P0782__1__0___0', 'P0136__1__0___824', 'P0828__1__492___824', 'P0083__1__824___1648', 'P0256__1__256___0', 'P2018__1__0___0', 'P1986__1__0___98', 'P2538__1__824___0', 'P0861__1__0___1755', 'P2197__1__0___0', 'P0900__1__1048___1166', 'P2099__1__93___116', 'P0000__1__1648___1648', 'P1995__1__0___71', 'P1019__1__0___1648', 'P0382__1__59___148', 'P0029__1__824___0', 'P0343__1__824___92', 'P1014__1__824___0', 'P0382__1__0___148', 'P0893__1__0___824', 'P1841__1__0___721', 'P2082__1__0___0', 'P0136__1__0___1554', 'P2348__1__0___341', 'P0087__1__2472___4113', 'P0867__1__824___0', 'P1179__1__1648___1648', 'P1052__1__0___0', 'P0940__1__358___0', 'P0228__1__363___0', 'P0129__1__0___824', 'P0845__1__0___85', 'P1030__1__1648___343', 'P0256__1__0___0', 'P1848__1__556___0', 'P1090__1__1149___0', 'P0421__1__336___0', 'P2255__1__0___0', 'P2286__1__1539___824', 'P0010__1__0___841', 'P2016__1__0___0', 'P2006__1__824___1587', 'P0768__1__824___0', 'P2162__1__0___356', 'P1241__1__1648___0', 'P2100__1__0___0', 'P0324__1__1758___0', 'P2034__1__0___0', 'P1983__1__8___0', 'P2095__1__379___0', 'P1871__1__9064___824', 'P0904__1__31___0', 'P1832__1__502___0', 'P1964__1__0___605', 'P1926__1__0___602', 'P0764__1__0___0', 'P0012__1__1648___0', 'P2454__1__824___824', 'P0310__1__824___824', 'P0060__1__2475___824', 'P2027__1__128___1152', 'P2006__1__824___824', 'P0898__1__824___1648', 'P1868__1__5768___1648', 'P1808__1__0___507', 'P1187__1__0___0', 'P2287__1__824___1040', 'P1908__1__0___0', 'P0759__1__115___61', 'P2099__1__93___0', 'P2034__1__453___0', 'P1891__1__808___0', 'P0029__1__1735___824', 'P2097__1__0___0', 'P0060__1__2472___1229', 'P0131__1__0___0', 'P2670__1__824___1613', 'P0424__1__80___79', 'P0898__1__824___2472', 'P0299__1__129___0', 'P1851__1__0___1186', 'P1903__1__0___0', 'P1923__1__17___0', 'P0204__1__0___0', 'P1158__1__3296___824', 'P2177__1__0___57', 'P0259__1__824___1245', 'P0704__1__1112___0', 'P1780__1__2472___0', 'P0380__1__0___0', 'P1185__1__359___0', 'P0809__1__380___0', 'P0832__1__0___0', 'P2014__1__1966___1797', 'P1821__1__0___0', 'P0324__1__824___824', 'P1964__1__277___605', 'P2368__1__0___0', 'P2645__1__824___1648', 'P0977__1__0___0', 'P1982__1__907___824', 'P2036__1__0___517', 'P1166__1__2472___1648', 'P0898__1__824___0', 'P1964__1__277___0', 'P1934__1__0___0', 'P0204__1__0___35', 'P1869__1__1648___2472', 'P1891__1__0___337', 'P0835__1__0___0', 'P0805__1__384___95', 'P2030__1__2472___3296', 'P1841__1__0___0', 'P2222__1__0___0', 'P0677__1__0___0', 'P1775__1__115___0', 'P0066__1__824___824', 'P2053__1__0___455', 'P1201__1__2472___824', 'P1972__1__5603___0', 'P1812__1__0___0', 'P0898__1__0___2472', 'P1868__1__4120___1648', 'P1243__1__0___2976', 'P1984__1__0___0', 'P1964__1__0___0', 'P0060__1__2475___0', 'P2164__1__0___824', 'P0029__1__1648___824', 'P1992__1__0___794', 'P1938__1__824___0', 'P1107__1__0___0', 'P0867__1__824___824', 'P1832__1__502___824', 'P0293__1__438___25', 'P0823__1__721___824', 'P0977__1__0___824', 'P2033__1__0___0', 'P2030__1__3296___2472', 'P1861__1__1020___2472', 'P0823__1__0___0', 'P2138__1__0___824', 'P1869__1__3296___824', 'P0029__1__824___824', 'P1861__1__824___0', 'P0012__1__0___966', 'P2162__1__0___0', 'P1874__1__824___0', 'P1861__1__0___824', 'P2368__1__0___824', 'P1166__1__2472___824', 'P0871__1__1367___1648', 'P0723__1__116___0', 'P2085__1__189___0', 'P1869__1__824___3296', 'P1778__1__1648___1648', 'P0769__1__0___0', 'P2085__1__0___0', 'P0476__1__0___0', 'P0338__1__1600___383', 'P1776__1__0___0', 'P0007__1__466___824', 'P1973__1__824___665', 'P1991__1__674___0', 'P0688__1__0___74', 'P0857__1__256___824', 'P0867__1__0___0', 'P0704__1__0___412', 'P0632__1__1648___0', 'P0087__1__3296___2472', 'P0111__1__824___720', 'P2013__1__924___0', 'P2005__1__1648___3218', 'P0898__1__0___0', 'P0187__1__0___0', 'P0855__1__144___0', 'P1962__1__0___145', 'P2131__1__280___0', 'P0975__1__0___684', 'P2086__1__0___0', 'P2205__1__493___824', 'P0579__1__0___98', 'P0867__1__0___1027', 'P1987__1__0___0', 'P0160__1__0___0', 'P1923__1__17___401', 'P1132__1__4120___3296', 'P2076__1__0___0', 'P0203__1__0___0', 'P0299__1__0___0', 'P0769__1__48___567', 'P2077__1__0___0', 'P2036__1__0___0', 'P0823__1__0___1449', 'P0531__1__0___0', 'P1972__1__824___0', 'P0879__1__0___1570', 'P0728__1__0___0', 'P2029__1__0___0', 'P0893__1__0___0', 'P0737__1__824___349', 'P1053__1__398___0', 'P0791__1__0___58', 'P1632__1__1648___824', 'P1652__1__0___2472', 'P2275__1__824___0', 'P2057__1__0___0', 'P1193__1__136___0', 'P0725__1__634___74', 'P0223__1__780___441', 'P2047__1__149___0', 'P2131__1__280___397', 'P1780__1__2562___1648', 'P1927__1__0___824', 'P1241__1__2472___0', 'P1874__1__824___824', 'P1087__1__824___1923', 'P2017__1__0___0', 'P2082__1__0___364', 'P1242__1__1648___1648', 'P0940__1__0___0', 'P2055__1__130___0', 'P0222__1__515___416', 'P1087__1__0___1648', 'P2551__1__1648___3197', 'P2080__1__0___0', 'P0000__1__2472___1648', 'P1973__1__0___665', 'P2034__1__0___267', 'P0202__1__145___0', 'P0310__1__1648___930', 'P1785__1__236___318', 'P2173__1__4120___824', 'P1086__1__0___47', 'P1966__1__0___0', 'P2022__1__0___0', 'P2058__1__0___0', 'P0857__1__256___0', 'P0020__1__2472___3296', 'P0764__1__634___74', 'P2130__1__70___118', 'P1861__1__824___2579', 'P1650__1__824___824', 'P1652__1__0___2976', 'P1182__1__824___1648', 'P2058__1__0___97', 'P2076__1__857___184', 'P0844__1__0___85', 'P2027__1__128___824', 'P0921__1__0___1548', 'P0321__1__0___824', 'P1090__1__824___376', 'P1959__1__0___477', 'P1927__1__0___1648', 'P0379__1__0___0', 'P0728__1__0___348', 'P0945__1__0___0', 'P0087__1__2472___3296', 'P1073__1__0___0', 'P1809__1__3296___824', 'P0723__1__116___426', 'P1927__1__0___0', 'P2014__1__1966___824', 'P1977__1__0___0', 'P0117__1__345___0', 'P0029__1__1648___0', 'P1938__1__0___0', 'P1973__1__979___665', 'P1982__1__907___923', 'P1927__1__124___0', 'P0029__1__824___1383', 'P2027__1__0___1152', 'P0822__1__198___0', 'P0313__1__0___0', 'P0504__1__0___494', 'P0783__1__0___0', 'P1778__1__824___1782', 'P1992__1__138___0', 'P2100__1__568___0', 'P0527__1__0___0', 'P2033__1__570___0', 'P0086__1__0___0', 'P2124__1__0___130', 'P1933__1__584___381', 'P0170__1__942___0', 'P0849__1__627___140', 'P1140__1__2472___0', 'P0087__1__3415___1648', 'P0066__1__1648___0', 'P1983__1__8___238', 'P0044__1__0___708', 'P1158__1__4944___824', 'P0987__1__54___848', 'P2006__1__0___1587', 'P1927__1__124___1648', 'P1906__1__0___0', 'P2074__1__0___919', 'P2100__1__568___422', 'P2079__1__0___0', 'P1047__1__0___0', 'P0082__1__1648___0', 'P1868__1__4120___824', 'P0823__1__0___824', 'P2076__1__857___0', 'P1846__1__0___7', 'P0158__1__2116___824', 'P1109__1__812___0', 'P0795__1__0___0', 'P0944__1__0___0', 'P1075__1__0___1648', 'P1075__1__1139___0', 'P0066__1__824___1648', 'P0499__1__31___0', 'P1962__1__0___0']
# print(len(bbb))

# imgs='/workspace/ReDet/datasets/DOTA_1024/trainval1024/result600'
# filenames = util.GetFileFromThisRootDir(imgs)


for k in range(644):
    print(k)
    imgpath = os.path.join('/workspace/ReDet/datasets/DOTA_1024/trainval1024/test600', bbb[k] + '.png')
    labelpath=os.path.join('/workspace/ReDet/datasets/DOTA_1024/trainval1024/result600', str(k) + '.txt')
    objects = util.parse_dota_poly2(labelpath)
    # if len(objects)==0:
    #     os.remove('/workspace/ReDet/datasets/DOTA_1024/trainval1024/test600/'+name + '.png')
    #     continue
    img = cv2.imread(imgpath,cv2.IMREAD_COLOR)
    # print(objects)
    
    for obj in objects:
        bbox=obj['poly']
        j = wordname_15.index(obj['name'])
        color = colormap[j]
        for i in range(3):
            cv2.line(img, (bbox[i * 2], bbox[i * 2 + 1]), (bbox[(i + 1) * 2], bbox[(i + 1) * 2 + 1]), color=color,
                    thickness=2, lineType=cv2.LINE_AA)
        cv2.line(img, (bbox[6], bbox[7]), (bbox[0], bbox[1]), color=color, thickness=2, lineType=cv2.LINE_AA)
        cv2.putText(img, '%s' % (obj['name']), (bbox[0], bbox[1] + 10),color=color_white, fontFace=cv2.FONT_HERSHEY_COMPLEX, fontScale=0.5)
    dstpath1 = os.path.join('/workspace/ReDet/datasets/DOTA_1024/trainval1024/test600result_1', bbb[k] + ".png")
    cv2.imwrite(dstpath1, img)


# def updateFile(file,old_str,new_str):
#     file_data = ""
#     with open(file, "r") as f:
#         for line in f:
#             line=line.strip()
#             line = line.replace(old_str,new_str)
#             line = line+'\n'
#             file_data += line
#     with open(file,"w") as f:
#         f.write(file_data)

# for i in range(644):
#     file2 = os.path.join('/workspace/ReDet/datasets/DOTA_1024/trainval1024/result600', str(i) + '.txt')
#     updateFile(file2,'  ',' ')